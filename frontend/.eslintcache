[{"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/index.js":"1","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/reportWebVitals.js":"2","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Sidebar.js":"3","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Cameras.js":"4","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Suspects.js":"5","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Dashboard.js":"6","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Settings.js":"7","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Cognito.js":"8","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/getToken.js":"9","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Apibackend.js":"10","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/MenuBar.js":"11","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Account.js":"12","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Acordion.js":"13","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Alerts.js":"14","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Signin.js":"15","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/App.js":"16","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Home.js":"17","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Api.js":"18"},{"size":578,"mtime":1610187529929,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607927895106,"results":"21","hashOfConfig":"20"},{"size":23564,"mtime":1610778051696,"results":"22","hashOfConfig":"20"},{"size":12623,"mtime":1610327615314,"results":"23","hashOfConfig":"20"},{"size":14432,"mtime":1610324544204,"results":"24","hashOfConfig":"20"},{"size":14193,"mtime":1610777805276,"results":"25","hashOfConfig":"20"},{"size":2099,"mtime":1608263316769,"results":"26","hashOfConfig":"20"},{"size":752,"mtime":1610231987117,"results":"27","hashOfConfig":"20"},{"size":820,"mtime":1609196361795,"results":"28","hashOfConfig":"20"},{"size":139,"mtime":1608406557080,"results":"29","hashOfConfig":"20"},{"size":3304,"mtime":1610777907449,"results":"30","hashOfConfig":"20"},{"size":3400,"mtime":1610183605250,"results":"31","hashOfConfig":"20"},{"size":3980,"mtime":1610230790167,"results":"32","hashOfConfig":"20"},{"size":2520,"mtime":1610231870244,"results":"33","hashOfConfig":"20"},{"size":10315,"mtime":1610604064885,"results":"34","hashOfConfig":"20"},{"size":920,"mtime":1610265507773,"results":"35","hashOfConfig":"20"},{"size":3573,"mtime":1610602871600,"results":"36","hashOfConfig":"20"},{"size":2630,"mtime":1610189296012,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"178cfx6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/index.js",[],["85","86"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/reportWebVitals.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Sidebar.js",["87","88"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Cameras.js",["89"],"import React, { Component } from \"react\";\nimport 'fontsource-roboto';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport styled from \"styled-components\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport getToken from '../Config/getToken'\nimport apiEndpoint from '../Config/Apibackend'\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Modal from '@material-ui/core/Modal';\n\nconst NewCamerasContainer = styled.div`\n    display: flex;\n    padding-top: 100px;\n    \n`;\n    \nclass Cameras extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n            cameraId: \"\", username:\"admin\", password:\"12345\", cam_Location:\"\", ip:\"\", server_Status:\"\", \n            url_path: \"Streaming/Channels/101\", server_info: \"\", port:\"554\", req_Status:\"\", userId:\"\", report_to:\"\",\n            token: \"\", camerasList: null, setOpen: false, reload: null,\n        };\n             \n        \n    }\n\n    async componentDidMount(){\n        await this.handleAuth();\n        this.getCameras();\n     \n    }\n\n    async handleAuth(){\n        let token = new getToken();\n        await token.token()\n        this.setState({\n            token: token.state.jwtToken\n        })\n\n    }\n    async getCameras(){\n        // console.log(this.state.token)\n        \n        await axios.get(apiEndpoint+'/getcameras', \n            {headers: \n                { 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.token}`}\n             }).then(res => {this.setState({camerasList: res.data.item});\n               })\n          .catch(e => console.log(e))\n        \n    }\n\n    handleEdit(camItem){\n        \n       \n       this.setState({\n           setOpen: true,\n           cameraId: camItem.cameraId,\n           cam_Location: camItem.cam_Location,\n           ip: camItem.ip,\n           port: camItem.port,\n           url_path: camItem.url_path,\n           username: camItem.username,\n           password: camItem.password,\n           report_to: camItem.report_to\n        })\n\n    }\n    \n    handleClose = () => {\n        this.setState({\n            setOpen:false\n        })\n    }\n    \n    handleFormInput = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({[name] : value })\n    }\n\n    handleSubmit = () => {\n        const newCam ={\n            cam_Location: this.state.cam_Location,\n            ip: this.state.ip,\n            port: this.state.port,\n            url_path: this.state.url_path,\n            username: this.state.username,\n            password: this.state.password\n        }\n        this.createNewCam(newCam);\n\n    }\n\n    handleEditSubmit =() =>{\n        const editedCam ={\n            cam_Location: this.state.cam_Location,\n            ip: this.state.ip,\n            port: this.state.port,\n            url_path: this.state.url_path,\n            username: this.state.username,\n            password: this.state.password,\n            report_to: this.state.report_to\n        }\n        //console.log(editedCam)\n        this.updateCamera(this.state.cameraId, editedCam);\n    }\n\n    async handleDel(cameraId){\n        await axios.delete(apiEndpoint+'/delcamera/'+cameraId,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The Camera was not deleted\", e); console.log(e)});\n        //window.location.pathname = \"/api\";\n        this.getCameras();\n     }\n\n        \n    async createNewCam(newCam){\n        await axios.post(apiEndpoint+'/camset', newCam,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The request was not completed; Make sure to include all the required data\", e); console.log(e)});\n        //window.location.pathname = \"/api\";\n        this.getCameras();\n        this.handleClose();\n    }\n\n    async updateCamera(cameraId, editedCam){\n        await axios.patch(apiEndpoint+'/camera/'+cameraId, editedCam,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The request was not completed; Make sure to include all the required data\", e); console.log(e)});\n        //window.location.pathname = \"/api\";\n        this.getCameras();\n        this.handleClose();\n        \n    }\n\n    render() {\n    \n    let cameraLst = []\n    if (this.state.camerasList)\n        cameraLst= this.state.camerasList;\n        \n        const lstOfCameras = cameraLst.map((item) =>\n                    \n                    <tr >    \n                        <td>{item.cam_Location}</td>\n                        <td>{item.ip}</td>\n                        <td>{item.port}</td>\n                        <td>{item.url_path}</td>\n                        <td>{item.username}</td>\n                        <td>{item.password}</td>\n                        <td>{item.server_info}</td>\n                        <td>{item.report_to}</td>\n                        <td> <Button onClick={() =>{this.handleEdit(item)}}>Edit</Button></td>\n                        <td> <IconButton onClick={() =>{this.handleDel(item.cameraId)} } aria-label=\"delete\"><DeleteIcon/></IconButton></td>\n                        \n                    \n                    </tr>\n                    )\n    \n    return (\n            \n           <Container >\n               <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        Registered Cameras\n                </Typography>\n               <TableContainer component={Card}>\n                   <Table selectable={false} >\n                        <TableHead >\n                            <TableRow >\n                                <TableCell align=\"center\"> Location</TableCell>\n                                <TableCell align=\"center\"> Camera IP</TableCell>\n                                <TableCell align=\"center\"> Port</TableCell>\n                                <TableCell align=\"center\"> URL Path</TableCell>\n                                <TableCell align=\"center\"> Username</TableCell>\n                                <TableCell align=\"center\"> Password</TableCell>\n                                <TableCell align=\"center\"> Status</TableCell>\n                                <TableCell align=\"center\"> Report To</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody >\n                           {lstOfCameras}\n                        </TableBody>\n                   </Table>\n               </TableContainer>\n\n               <Modal open={this.state.setOpen} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                <Container maxWidth=\"md\" disableGutters=\"true\">\n                  <Card>\n                  <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Edit Camera\n                        </Typography>\n                       \n                        <TextField required id=\"standard-required-1\" label=\"Location\" defaultValue={this.state.cam_Location} onChange={this.handleFormInput} name=\"cam_Location\"/>\n                        <TextField required id=\"standard-disabled-2\" label=\"IP\"  defaultValue={this.state.ip} onChange={this.handleFormInput} name=\"ip\"/>\n                        <TextField required id=\"standard-disabled-3\" label=\"PORT\" defaultValue={this.state.port} onChange={this.handleFormInput} name=\"port\"/>\n                        <TextField required id=\"standard-disabled-4\" label=\"URL/Path\" defaultValue={this.state.url_path} onChange={this.handleFormInput} name=\"url_path\"/>\n                        <TextField required id=\"standard-disabled-5\" label=\"username\" defaultValue={this.state.username}  onChange={this.handleFormInput} name=\"username\"/>\n                \n                \n                        <TextField required\n                        id=\"standard-password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        defaultValue={this.state.password} \n                        autoComplete=\"current-password\"\n                        onChange={this.handleFormInput} name=\"password\"\n                        />\n                        <TextField required id=\"standard-disabled-6\" label=\"Report to\" defaultValue={this.state.report_to} onChange={this.handleFormInput} name=\"report_to\"/>\n\n                  </CardContent>\n                        \n                  \n                  <CardActions>\n                  <Button variant=\"contained\"  onClick={this.handleEditSubmit} >Submit</Button>\n                  <Button size=\"small\"  onClick={this.handleClose}>Cancel</Button>  \n                  </CardActions>  \n                  </Card>            \n                </Container>\n                </Modal>\n              \n               \n                <NewCamerasContainer>\n                <Card>\n                <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        New camera \n                </Typography>\n                \n                <CardContent>\n                \n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                    <ul> \n                        <li>Add a new camera using RTSP protocol </li>\n                        <li>The camera must be connected to the internet.</li>\n                        <li>Set port forwarding on your Internet Router. Check the following <a href=\"https://www.purevpn.com/blog/how-to-forward-ports-on-your-router/\" rel=\"noreferrer\" target=\"_blank\" >link</a> to learn how to do it.</li>\n                        <li>Find here the <a href=\"https://www.getscw.com/decoding/rtsp#:~:text=1.210.-,You%20can%20also%20encode%20credentials%20into%20the%20URL%20by%20entering,and%2012345%20is%20the%20password.\" target=\"_blank\">RTSP stream URL/Path </a> for your camera brand. </li>\n                    </ul>\n                    \n                </Typography>\n             \n                </CardContent>\n                <TextField required id=\"standard-required-1\" label=\"Location\"  onChange={this.handleFormInput} name=\"cam_Location\"/>\n                <TextField required id=\"standard-disabled-7\" label=\"IP\"  onChange={this.handleFormInput} name=\"ip\"/>\n                <TextField required id=\"standard-disabled-8\" label=\"PORT\" defaultValue=\"554\" onChange={this.handleFormInput} name=\"port\"/>\n                <TextField required id=\"standard-disabled-9\" label=\"URL/Path\" defaultValue=\"Streaming/Channels/101\" onChange={this.handleFormInput} name=\"url_path\"/>\n                <TextField required id=\"standard-disabled-10\" label=\"username\" defaultValue=\"admin\" onChange={this.handleFormInput} name=\"username\"/>\n                \n                \n                <TextField required\n                id=\"standard-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                defaultValue=\"12345\"\n                autoComplete=\"current-password\"\n                onChange={this.handleFormInput} name=\"password\"\n                />\n            \n              \n                \n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\"  onClick={this.handleSubmit}>\n                    add\n                    </Button>\n                    <Button size=\"small\" >\n                    Learn More\n                    </Button>\n                </CardActions>\n                \n                </Card>\n                </NewCamerasContainer>\n            \n            \n            </Container>\n            \n            )\n    }\n}\n\n\nexport default Cameras;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Suspects.js",["90","91","92"],"import React, { Component } from \"react\";\nimport 'fontsource-roboto';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport styled from \"styled-components\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport getToken from '../Config/getToken'\nimport apiEndpoint from '../Config/Apibackend'\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Modal from '@material-ui/core/Modal';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { Avatar, CardHeader } from \"@material-ui/core\";\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst NewSuspectContainer = styled.div`\n    display: flex;\n    padding-top: 100px;\n    padding-left: 200px;\n    \n`;\nconst ButtonAdd = styled.div`\n    display : flex;\n    padding-top: 20px;\n    padding-left: 100px;\n\n`;\nconst ButtonRefresh = styled.div`\n    display : flex;\n    \n    padding-left: 20px;\n\n`;\n\nconst ImagesSuggestion = styled.div`\n    display: center;\n    padding-left: 130px;\n  \n`;\n    \nclass Suspects extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n            suspectName:\"\", findings: null, encoding:\"\", encoding_status:\"\", objectKey:\"\", \n            token: \"\", suspectsList: null, setOpen: false, reload: null, file: \"\", filename:\"\", userId: \"\",\n            modal_File: false, presignedURL:\"\", setOpenAddModal: false, uploadProgress: null\n        };\n         \n        \n    }\n\n    \n\n    handleEdit(item){\n        console.log(this.state.suspectName)\n       \n       this.setState({\n           setOpen: true,\n           suspectName: item.suspectName   \n        })\n\n    }\n    \n    handleClose = () => {\n        this.setState({\n            setOpen:false,\n            modal_File:false,\n            setOpenAddModal :false\n        })\n    }\n    \n    handleFormInput = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({[name] : value })\n    }\n\n    handleSubmit = () => {\n        const newSuspect ={\n            suspectName: this.state.suspectName,\n        }\n        this.createNewSuspect(newSuspect);\n        this.handleClose();\n\n    }\n\n    handleModalFile(item){\n        \n        this.setState({\n            modal_File: true,\n            suspectName: item.suspectName\n        })\n       \n        \n        \n    }\n\n    handleFile = event =>{\n        \n        this.setState({\n            file: event.target.files[0], \n            filename: event.target.files[0]['name'] \n            });   \n        \n    }\n\n    handleNewSusp = () =>{\n        this.setState({\n            setOpenAddModal: true,  \n         })\n\n    }\n\n    async componentDidMount(){\n        await this.handleAuth();\n        this.getSuspects();\n     \n    }\n\n    async handleAuth(){\n        let token = new getToken();\n        await token.token()\n        this.setState({\n            token: token.state.jwtToken,\n            userId: token.state.user\n        })\n\n    }\n    async getSuspects(){\n        // console.log(this.state.token)\n        \n        await axios.get(apiEndpoint+'/getsuspects', \n            {headers: \n                { 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.token}`}\n             }).then(res => {this.setState({suspectsList: res.data.item});\n               })\n          .catch(e => console.log(e))\n        \n    }\n\n    handleSubmitFile = () =>{\n                \n        const newSuspect = {\n            suspectName: this.state.suspectName,\n            filename: this.state.filename\n        }\n        this.editFileSuspect(newSuspect);\n    }\n\n    updateProgressBarValue(percentage){\n        \n        if (percentage !== 0){\n\n            return(<LinearProgress variant=\"determinate\" value={percentage} />)\n        }\n            \n        \n    }\n\n    async editFileSuspect(newSuspect){\n        console.log(newSuspect)\n        await axios.post(apiEndpoint+'/getuploadurl', newSuspect,\n            {   \n                headers:\n                { 'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${this.state.token}`}\n            }).then(res =>{this.setState({presignedURL: res.data.uploadUrl})\n            }).catch(e => {alert(\"Erro while procesing request\", e); console.log(e)});\n        console.log(this.state.presignedURL)\n\n        await axios.put(this.state.presignedURL, this.state.file,{\n            onUploadProgress: (Progress) => {\n                if (Progress.lengthComputable) {\n                        console.log(Progress.loaded + ' ' + Progress.total);\n                        if (Progress.total!==null){\n                                 this.setState({uploadProgress: Math.round((Progress.loaded *100)/Progress.total)})\n                             }\n                    }\n              } \n         \n        }).then(res => { \n            alert(\"File has been uploaded\");\n            //window.location.pathname = \"/api\";\n            this.getSuspects();\n            this.handleClose();\n        }).catch(e => alert(e));\n\n    }\n\n    async handleDel(suspectName){\n        console.log(suspectName)\n        await axios.delete(apiEndpoint+'/delsuspect/'+suspectName,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The Suspect was not deleted\", e); console.log(e)});\n        //window.location.pathname = \"/api\";\n        this.getSuspects();\n     }\n\n        \n    async createNewSuspect(newSuspect){\n        await axios.post(apiEndpoint+'/suspect', newSuspect,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The request was not completed; Make sure to include all the required data\", e); console.log(e)});\n        //window.location.pathname = \"/api\";\n        this.getSuspects();\n    }\n\n    getfindingsDate(item){\n       \n        if (Object.keys(item.findings).length!==0){\n            let UTC_time = item.findings[Object.keys(item.findings).length-1].date + \" UTC\"\n            \n            let localDate = new Date(UTC_time)\n            \n            return (localDate.toLocaleDateString() +\" \"+ localDate.toLocaleTimeString())\n        }\n        else {\n            return \"N/A\"\n        }\n                                    \n    }\n    getfindingsLocation(item){\n        \n        if (Object.keys(item.findings).length!==0){\n            return (item.findings[Object.keys(item.findings).length-1].location)\n        }\n        else {\n            return \"N/A\"\n        }\n                                    \n    }\n    handleReload =() =>{\n        this.getSuspects();\n    }\n    \n\n    render() {\n    let progressBar = this.updateProgressBarValue(this.state.uploadProgress)       \n    let suspectLst = []\n    if (this.state.suspectsList){\n        suspectLst= this.state.suspectsList;\n        \n    }\n        \n        const lstOfSuspects= suspectLst.map((item) => \n                        \n                    <tr >    \n                        <td >{item.suspectName}</td>\n                        <td>{item.encoding_status}</td>\n                        <td>{this.getfindingsDate(item)}</td>\n                        <td>{this.getfindingsLocation(item)}</td>                        \n                        <td> <IconButton onClick={() =>{this.handleModalFile(item)} } aria-label=\"Add a Photo\" type=\"file\" ><AddAPhotoIcon/></IconButton></td>\n                        <td> <IconButton onClick={() =>{this.handleDel(item.suspectName)} } aria-label=\"delete\"><DeleteIcon/></IconButton></td>\n                        \n                    \n                    </tr>\n                        )\n        \n    \n    return (\n            \n           <Container >\n               {/*--------------------------------- SUSPECTS LIST ----------------------------------------*/} \n               <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        Registered Profiles\n                </Typography>\n               <TableContainer component={Paper}>\n                   <Table aria-label=\"simple table\" size=\"small\" stickyHeader=\"true\" >\n                        <TableHead >\n                            <TableRow >\n                                <TableCell align=\"center\"> Name </TableCell>\n                                <TableCell align=\"center\"> Image Status</TableCell>\n                                <TableCell align=\"center\"> Last Seen</TableCell>\n                                <TableCell align=\"center\"> Seen At</TableCell>\n                                <TableCell align=\"center\"> Add Image</TableCell>\n                                <TableCell align=\"center\"> Delete</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody >\n                           {lstOfSuspects}\n                        </TableBody>\n                   </Table>\n               </TableContainer>\n               <ButtonAdd>\n               <Button variant=\"contained\" size=\"small\"  onClick={this.handleNewSusp}> Add </Button>\n               <ButtonRefresh>\n               <Button variant=\"contained\"  align=\"justify\" onClick={this.handleReload} >Refresh</Button>\n               </ButtonRefresh>\n               </ButtonAdd>\n               \n\n              \n                {/*--------------------------------- MODAL FOR EDIT SUSPECT ---NOT IN USE-------------------------------------*/} \n               <Modal open={this.state.setOpen} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                <Container maxWidth=\"xs\" disableGutters=\"true\">\n                  <Card>\n                  <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Edit Suspect\n                        </Typography>\n                        <TextField required id=\"standard-required\" label=\"Name\" defaultValue={this.state.suspectName} onChange={this.handleFormInput} name=\"suspectName\"/>\n                    </CardContent>                   \n                  <CardActions>\n                                     \n                  <Button variant=\"contained\"  onClick={this.handleEditSubmit} >Submit</Button>\n                  <Button size=\"small\"  onClick={this.handleClose}>Cancel</Button>  \n                  </CardActions>  \n                  </Card>            \n                </Container>\n                </Modal>\n                {/*--------------------------------- MODAL FOR CHANGE IMAGE ----------------------------------------*/} \n                <Modal open={this.state.modal_File} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                <Container maxWidth=\"xs\" disableGutters=\"true\">\n                  <Card>\n                  <ImagesSuggestion><img src=\"/Images/picFrame.jpg\"/></ImagesSuggestion>\n                <CardContent>\n                \n                </CardContent> \n                  <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Add/Change Image\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                            \n                                <li>For better detection and encoding results please use ID style images. </li>\n                                <li>To crop an Image, use <a href=\"https://photoshop.adobe.com/\" target=\"_blank\" >Adobe Photoshop online</a> App.</li>\n                                \n                            \n                            \n                        </Typography>\n                        \n                        <TextField required id=\"standard-required\" label=\"File\"  onChange={this.handleFile} name=\"objectKey\" type=\"file\" />\n\n                  </CardContent>\n                  <CardActions>  \n                  <Button variant=\"contained\"  onClick={this.handleSubmitFile} >Submit</Button>\n                  <Button size=\"small\"  onClick={this.handleClose}>Cancel</Button>  \n                  \n                  </CardActions>  \n                  \n                  </Card>   \n                  <div>{progressBar}</div>         \n                </Container>\n                \n                </Modal>\n              \n               {/*--------------------------------- ADD NEW SUSPECT ----------------------------------------*/} \n               <Modal open={this.state.setOpenAddModal} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n               <Container maxWidth=\"xs\" disableGutters=\"true\">\n                <Card>\n                    <CardHeader avatar={<Avatar>S</Avatar>} title=\"New Suspect\"></CardHeader>\n                <CardContent>\n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                    <ul> \n                        <li>Please generate encodings after adding a new suspects</li>\n                    </ul>\n                    <TextField required id=\"standard-required-1\" label=\"Name\"  onChange={this.handleFormInput} name=\"suspectName\"/>\n                </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\"  onClick={this.handleSubmit}>\n                    add\n                    </Button>    \n                </CardActions>\n                </Card>\n                </Container>\n                </Modal>\n            </Container>\n            \n            )\n    }\n}\n\n\n\nexport default Suspects;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Dashboard.js",["93","94","95","96","97","98","99","100","101","102","103"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Settings.js",["104","105","106","107","108","109"],"import Button from '@material-ui/core/Button';\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from '@material-ui/core/Modal';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\n\n\nclass Settings extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            setOpen: false,\n            };\n    }\n\n    \n\n    handleOpen = () => {\n        this.setState({\n            setOpen:true\n        })\n    }\n    \n    handleClose = () => {\n        this.setState({\n            setOpen:false\n        })\n    }\n    \n    \n    render() {\n    \n    return (\n        \n      \n      <Container maxWidth=\"sm\">\n      \n        <Button variant=\"contained\" onClick={this.handleOpen}>Open Modal</Button>\n        \n        <Modal open={this.state.setOpen} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n            <Container maxWidth=\"xs\" disableGutters=\"true\">\n              <Card>\n              <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Lizard\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        <p>Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                        across all continents except Antarctica  \n                        </p>\n                    </Typography>\n                </CardContent>\n             </Card>\n            </Container>\n        </Modal>\n        \n       \n        </Container>\n       \n        \n    )\n    }\n}\n\n\nexport default Settings;",["110","111"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Cognito.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/getToken.js",["112"],"import { Auth } from 'aws-amplify';\nimport React, {Component} from 'react';\n\nclass getToken extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            jwtToken :\"\",\n            user :\"\",\n            attributes: null\n                    };\n         this.token();\n    }\n    async token(){\n        \n        await Auth.currentSession()\n                .then(data => {this.state.jwtToken = data.idToken.jwtToken })\n                .catch(e => console.log(e))\n        await Auth.currentAuthenticatedUser()\n                .then(user => {this.state.user= user.username; this.state.attributes = user.attributes\n                                })\n                .catch(e => console.log(e))\n                  //console.log(this.state.jwtToken)\n        \n        \n    }\n\n\n}\n export default getToken;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Apibackend.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/MenuBar.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Account.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Acordion.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Alerts.js",["113","114","115"],"import React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\n\n\nclass Alerts extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            close: false, open: true, suspect:\"\" , location:\"\", date:\"\", time:\"\"\n\n        };\n\n    }\n    intervalId = 0;\n    namesList = [\"Juan\", \"Caro\", \"Jaco\", \"Tomy\", \"Jhon Doe\", \"David Bowie\", \"Axel Rose\", \"Tino\", \"Andres\", \"Donald\", \"Ken\", \"Darin\", \"Claudia\", \"Joshua\", \"Olivia\", \"Emi\",\n                  \"Keli\", \"Adriana\", \"Jose\", \"Hector\", \"Marcela\", \"Nico\", \"Angie\", \"Laura\"  \n                ]\n    locationList = [\"Front Door\", \"Store 011\", \"Garage\", \"Cash Office\", \"Safe\", \"Back Door\", \"Staff Room\", \"Main Door\", \"Backyard\", \"Driveway\", \"Office 101\",\n                    \"Hallway\", \"Side Door\", \"Kitchen\", \"Security office\", \"POS\" \n                ]\n    componentDidMount= () =>{\n        let SuspectName = this.namesList[Math.floor(Math.random()*this.namesList.length)];\n        let locationName = this.locationList[Math.floor(Math.random()*this.locationList.length)];\n        let localDate = new Date();\n        this.setState({suspect: SuspectName, location:locationName, date:localDate.toLocaleDateString(), time:localDate.toLocaleTimeString()})\n        this.intervalId = setInterval(() => {this.handleReload()}, 10000);\n          \n    }\n    componentWillUnmount(){\n        clearInterval(this.intervalId)\n    }\n\n    handleReload =()=>{\n        \n        let SuspectName = this.namesList[Math.floor(Math.random()*this.namesList.length)];\n        let locationName = this.locationList[Math.floor(Math.random()*this.locationList.length)];\n        let localDate = new Date();\n        this.setState({open:true, suspect: SuspectName, location:locationName, date:localDate.toLocaleDateString(), time:localDate.toLocaleTimeString()})\n    }\n\n    handleClose =()=>{\n        this.setState({open:false})\n    }\n\n    render(){\n\n        return(\n            <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} open={this.state.open} autoHideDuration={5000} onClose={this.handleClose}>\n            <Alert onClose={this.handleClose} severity=\"warning\" >{this.state.suspect} has been detected in {this.state.location} at {this.state.date}, {this.state.time}!</Alert>\n            </Snackbar>\n        )\n    }\n\n}\n\nexport default Alerts;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Signin.js",["116","117","118","119","120","121","122","123","124","125"],"import React, { Component } from \"react\";\nimport { Link, RouteComponentProps, withRouter} from 'react-router-dom';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { AmplifyAuthenticator, AmplifySignUp, AmplifySignOut } from '@aws-amplify/ui-react';\nimport Grid from '@material-ui/core/Grid';\nimport Cognito from \"../Config/Cognito\"\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Modal from '@material-ui/core/Modal';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport { Avatar, CardHeader } from \"@material-ui/core\";\n\nAmplify.configure(Cognito);\nconst AUTH_USER_TOKEN_KEY = 'ReactAmplify.TokenKey';\n\nconst User = styled.div`\n    text-align: center;\n    position: absolute;\n    display: flex;\n    top: 1%;\n    left: 10%;\n    width: 7%;\n    height: 5%;\n    padding: 10px;\n    border: 5px solid rgb(151, 148, 148);\n    background-color : rgb(247, 239, 239);\n    border-radius: 20px;\n    margin: auto;\n    @media (max-width: 960px) {\n        top: 1%;\n        \n        width: 15%;\n     }\n    \n`;\n\nconst Pass = styled.div`\n    display: flex;\n    text-align: center;\n    position: absolute;\n    top: 1%;\n    left: 20%;\n    width: 7%;\n    height: 5%;\n    padding: 10px;\n    border: 5px solid rgb(151, 148, 148);\n    background-color : rgb(247, 239, 239);\n    border-radius: 20px;\n    margin: auto;\n    @media (max-width: 960px) {\n        left: 35%;\n        width: 15%;\n     }\n`;\n\nconst ButtonStyled = styled.div`\n    text-align: center;\n    position: absolute;\n    top: 3%;\n    left: 30%;\n    display: flex;\n    margin: auto;\n    @media (max-width: 960px) {\n        left: 60%;\n       \n     }\n\n`;\n\nconst Register = styled.div`\n    text-align: center;\n    justify-content: center;\n    position: absolute;\n    align-items: center;\n    top: 8%;\n    left: 28%;\n    height: 100vh;\n    margin: auto;\n    @media (max-width: 880px) {\n        left: 55%;\n        top: 9%;\n        \n       \n     }\n    \n\n    \n    \n    \n    \n`;\nconst RegModal = styled.div`\n    background-color : rgb(247, 239, 239);\n    color: rgb(255, 255, 255);\n    font-weight: bold;\n\n    border-radius: 25px;\n    position: absolute;\n    \n\n    /* z-index: 2; */\n    width: 30%;\n    padding: 15px;\n    text-align: center;\n    \n`;\n\n\n\nAmplify.configure(Cognito);\n\n\nclass Signin extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            username:\"\", password:\"\", loading: false, newUsername: \"\", newPassword:\"\", setOpenRegisterModal: false, userConfirmed: null , \n            setOpenConfirmModal: false, code: null\n        }\n    }\n\n    \n\n\nhandleFormInput = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({[name] : value })\n}\n\nhandleSignIn = () =>{\n\n    this.signIn();\n}\n\nhandleClose = ()=>{\n    this.setState({\n        setOpenRegisterModal: false,\n        setOpenConfirmModal : false\n    })\n}\n\nhandleCreateAccount = ()=>{\n    this.setState({\n        setOpenRegisterModal: true\n    })\n}\n\nhandleSubmitCreate =() =>{\n    this.signUp()\n}\n\nhandleSubmitValidate =() =>{\n    this.validate()\n}\n\nhandleResendCode =()=>{\n    this.reSendCode()\n}\n\nasync  signIn() {\n    this.setState({loading: true})\n    //console.log(this.state.username)\n        await Auth.signIn(this.state.username, this.state.password)\n        .then(user => {\n            console.log(this.props)\n            const history = this.props.history;\n            const location = this.props.location;\n            const { from } = location.state || {\n                from: {\n                    pathname:'/api'\n                }\n            };\n            localStorage.setItem(AUTH_USER_TOKEN_KEY, user.signInUserSession.accessToken.jwtToken);\n            console.log(user)\n            \n            window.location.pathname = \"/api\";\n        })\n        .catch(error => {\n        console.log('error signing in', error);\n        if (error.code===\"NotAuthorizedException\"){\n            alert(error.message)\n        }\n        else{\n            this.setState({\n                loading:false,\n                setOpenConfirmModal:true\n                });\n            alert(\"Please confirm you e-mail\");\n        }\n    })\n}\n\nasync signUp(){\n    let username = this.state.newUsername;\n    let password = this.state.newPassword;\n    let email = this.state.email;\n    let phone_number = this.state.phone_number;\n    let name = this.state.name;\n    await Auth.signUp({\n        username,\n        password,\n        attributes:{\n            email,\n            phone_number,\n            name\n        }\n\n    }).then(user =>{\n        this.setState({\n            userConfirmed: user.userConfirmed,\n            setOpenConfirmModal: true \n        })\n    }).catch(error =>{\n        console.log('error signing in', error);\n        alert(error.message)}\n    ) \n}\n\nasync validate(){\n    console.log(this.state.username)\n    await Auth.confirmSignUp(this.state.username, this.state.code)\n    .then(user => {\n        this.setState({\n            userConfirmed: user.userConfirmed,\n            setOpenConfirmModal: false,\n            setOpenRegisterModal: false\n        })\n        alert(\"email validated, please log in\")\n    })\n    .catch(error =>{\n        console.log('error Validating, error');\n        alert(error.message)}\n    )\n}\n\nasync reSendCode(){\n    try{\n        await Auth.resendSignUp(this.state.username);\n        console.log('code resent successfully');\n    } catch (err){\n        console.log('error resending code: ', err);\n    }\n    \n}\n\nrender(){\n    \n    return(\n        <div>\n            <User>\n                <TextField required id=\"standard-required\" label=\"username\"  onChange={this.handleFormInput} name=\"username\" />\n            </User>\n            <Pass>\n            <TextField required\n                        id=\"standard-password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleFormInput} name=\"password\"\n                        />\n            </Pass>\n            <ButtonStyled>\n                <Button variant=\"contained\"  onClick={this.handleSignIn} >Log In</Button>\n            </ButtonStyled>\n            <Register>\n            <Button size=\"small\" onClick={this.handleCreateAccount}>\n                    Create an Account\n            </Button>\n           \n            </Register>\n            {/* // -------------------------------------- REGISTER FORM ---------------------------------------------// */}\n            \n            <Modal open={this.state.setOpenRegisterModal} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n            <RegModal>\n               \n                <Card>\n                    <CardHeader avatar={<Avatar>A</Avatar>} title=\"New Account\"/>\n                   \n                <CardContent>\n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                            \n                            <li>Password must be minimum 8 characters long.</li>\n                            <li>Password must have at least one special characters.</li>\n                            <li>Password must have at least one capital letter.</li>\n                            <li>Include the country code in Phone number.</li>\n                            <li>E.g., Phone: +12345678910</li>\n                            \n                        \n                        \n                </Typography>\n                <TextField required id=\"standard-required-5\" label=\"Name\"  onChange={this.handleFormInput} name=\"name\"/>\n                <TextField required id=\"standard-required-1\" label=\"Username\"  onChange={this.handleFormInput} name=\"newUsername\"/>\n                <TextField required id=\"standard-password-input-2\" label=\"Password\" type=\"password\" onChange={this.handleFormInput} name=\"newPassword\"/>\n                <TextField required id=\"standard-required-3\" label=\"e-mail\"  onChange={this.handleFormInput} name=\"email\"/>\n                <TextField required id=\"standard-required-4\" defaultValue=\"+1\" label=\"Phone Number\"  onChange={this.handleFormInput} name=\"phone_number\"/>\n                \n                \n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\"  onClick={this.handleSubmitCreate}>\n                    Sign Up\n                    </Button>    \n                </CardActions>\n                </Card>\n                \n            </RegModal>\n            </Modal>\n            {/* // -------------------------------------- CONFIRM FORM ---------------------------------------------// */}\n            <Modal open={this.state.setOpenConfirmModal} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n            <RegModal>\n               \n                <Card>\n                    <CardHeader title=\"Confirm your Account\"/>\n                   \n                <CardContent>\n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                            \n                            <li>Please check your email.</li>\n                            <li>Validate the code.</li>        \n                </Typography>\n                <TextField required id=\"standard-required-5\" label=\"Validation Code\"  onChange={this.handleFormInput} name=\"code\"/>\n                \n                \n                \n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\"  onClick={this.handleSubmitValidate}>\n                    Validate\n                    </Button>\n                    <Button variant=\"contained\" size=\"small\"  onClick={this.handleResendCode}>\n                    Re-send code\n                    </Button>        \n                </CardActions>\n                </Card>\n                \n            </RegModal>\n            </Modal>\n            \n         </div>\n        \n    )\n}\n\n\n}\n\nexport default withRouter(Signin);","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/App.js",["126","127","128","129","130"],"\nimport './App.css';\nimport {BrowserRouter, Switch, Route, withRouter} from 'react-router-dom';\n\nimport Api from './Components/Api';\nimport Home from './Home';\nimport Cameras from './Components/Cameras';\nimport Suspects from './Components/Suspects';\nimport Dashboard from './Components/Dashboard';\nimport Account from './Components/Account';\n\n\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>        \n            <Route exact path=\"/home\" component={Home}/>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/api\" component={Api} />\n            {/* <Route exact path=\"/suspects\" component={Suspects}/>\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\n            <Route exact path=\"/cameras\" component={Cameras}/>\n            <Route exact path=\"/account\" component={Account}/> */}\n    </Switch>\n    </BrowserRouter>\n    \n  \n  );\n}\n\nexport default App;\n","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Home.js",["131","132","133","134","135","136"],"\nimport './App.css';\nimport React, { Component } from \"react\";\nimport {BrowserRouter, Switch, Route, withRouter} from 'react-router-dom';\nimport Typography from \"@material-ui/core/Typography\";\nimport ControlledAccordions from \"./Components/Acordion\";\nimport Card from \"@material-ui/core/Card\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport FilterDramaIcon from '@material-ui/icons/FilterDrama';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from \"@material-ui/core/Paper\";\nimport Alert from '@material-ui/lab/Alert';\nimport Alerts from './Components/Alerts';\nimport Signin from './Components/Signin';\n\nimport { CardHeader } from '@material-ui/core';\nimport BuildIcon from '@material-ui/icons/Build';\nimport getToken from './Config/getToken';\n\n\n\n\n\n\n\n\nclass Home extends Component {\n \n  async handleAuth(){\n    let token = new getToken();\n    await token.token();\n    console.log(token.state.attributes)\n    if (token.state.attributes!=null){\n      \n        window.location.pathname = \"/api\";\n        \n      }\n    }\n \n  \n render() {\n  let rerout = this.handleAuth();\n  return (\n    \n    // <BrowserRouter>\n      <div className=\"container2\">\n      <rerout/>\n      \n        <div className=\"side\">\n          <div className=\"title-side\">\n              <Typography  variant=\"body\" component=\"h2\"   gutterBottom>\n              Detect known persons using conventional IP Cameras\n              </Typography>\n          </div>\n\n          <div className=\"subtitle\">\n              <Typography  variant=\"body\" component=\"h2\"   >\n              This application will detect people's faces and notify you when someone on your profile is seen.\n              </Typography>\n          </div>\n          <div className=\"chips-list\">\n            <div className=\"chips-list-item\"> \n              <div className=\"chips\"> <Chip icon={<VideocamIcon/>} label=\"Live Streaming\"/></div>\n            </div>\n            <div className=\"chips-list-item\"> \n              <div className=\"chips\"> <Chip icon={<AccessAlarmsIcon/>} label=\"Real Time Notifications\"/></div>\n            </div>\n            <div className=\"chips-list-item\"> \n              <div className=\"chips\"> <Chip icon={<VerifiedUserIcon/>} label=\"Secure and Private\"/></div>\n            </div>\n            <div className=\"chips-list-item\"> \n              <div className=\"chips\"> <Chip icon={<FilterDramaIcon/>} label=\"100% Coud Service\"/></div>\n            </div>\n          </div>\n          \n          <div className=\"warning2\">\n            <Alerts/>\n          </div>\n          <div >\n            <div className=\"acordion\">\n              <Card >\n                <CardHeader avatar={<BuildIcon/>}  title=\"Instructions\" />\n                <ControlledAccordions/>\n              </Card>\n            </div>\n          </div>\n        </div>  \n        <div className=\"main\">\n          <div className=\"title\">\n            <Typography  variant=\"body\" component=\"h2\"   gutterBottom>\n            Use any IP camera for face recognition\n            </Typography>\n          </div>\n          <div >\n            <Signin/>  \n          </div>\n          <div className=\"footer\">\n            <Typography  variant=\"body\" component=\"h2\"   gutterBottom>\n              <a href=\"https://www.juadel.com\"> juadel.com - 2021 </a> \n            </Typography>\n          </div>\n        </div>\n      \n      </div>\n   \n\n    \n    \n  \n    );\n  }\n}\n\nexport default withRouter(Home);\n","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Api.js",["137","138","139"],"import './App.css';\nimport React, { Component } from \"react\";\nimport {BrowserRouter, Switch, withRouter, Route, Redirect} from 'react-router-dom';\nimport Sidebar from '../Sidebar';\nimport Cameras from './Cameras';\nimport Suspects from './Suspects';\nimport Dashboard from './Dashboard';\nimport Account from './Account';\nimport Menubar from './MenuBar';\nimport Amplify from 'aws-amplify';\nimport Cognito from '../Config/Cognito';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport '@aws-amplify/ui/dist/style.css';\nimport getToken from '../Config/getToken'\n\n\n\n\n\nAmplify.configure(Cognito);\n\nconst signUpConfig =\n{header: 'Welcome to SDC',\nhideAllDefaults: false,\ndefaultCountryCode: '1',\nsignUpFields: [\n  {\n    label: 'Name',\n    key: 'name',\n    required: true,\n    displayOrder: 1,\n    type: 'string'\n  },\n  \n  \n\n  // and other custom attributes\n]\n};\n\nclass Api extends Component {\n  \n  constructor(){\n    super();\n    this.state={\n      authorized:true\n    }\n    this.handleAuth()\n  }\n\n  async handleAuth(){\n    let token = new getToken();\n    await token.token();\n    console.log(token.state.attributes)\n    if (token.state.attributes===null){\n        alert(\"Please Log in or sign Up\")\n        window.location.pathname = \"/home\";\n        this.setState({authorized:false})\n      }\n    }\n\n\n  render(){\n      let check =()=> {\n        alert(\"Unauthorized\");\n        window.location.pathname = \"/home\";}\n    \n      if (this.state.authorized===false){\n        return check\n      }\n      else {\n        return (\n    \n            <BrowserRouter>\n            <check/>\n            <Redirect path=\"/dashboard\"/>\n            \n            <div className=\"App\">\n              <div class=\"container\">\n                <Sidebar class=\"grid-sidebar\"/>\n              \n                <div class=\"header\">  \n                <Menubar/>\n                \n                </div>\n                <div class=\"content\">\n                \n                <Switch>\n                    \n                    \n                    <Route exact path=\"/suspects\" component={Suspects}/>\n                    <Route exact path=\"/dashboard\" component={Dashboard}/>\n                    <Route exact path=\"/cameras\" component={Cameras}/>\n                    <Route exact path=\"/account\" component={Account}/>\n                    <Route exact path=\"/\" component={Dashboard} />\n\n                    \n                    \n                    \n                </Switch>\n                \n                </div>\n              </div>\n            </div>  \n            \n            </BrowserRouter>\n            \n        \n        );\n      }}\n}\n\n\n\nexport default Api;\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":3,"column":16,"nodeType":"146","messageId":"147","endLine":3,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":267,"column":216,"nodeType":"151","endLine":267,"endColumn":231},{"ruleId":"144","severity":1,"message":"152","line":28,"column":7,"nodeType":"146","messageId":"147","endLine":28,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":339,"column":37,"nodeType":"155","endLine":339,"endColumn":70},{"ruleId":"149","severity":1,"message":"150","line":350,"column":98,"nodeType":"151","endLine":350,"endColumn":113},{"ruleId":"144","severity":1,"message":"156","line":55,"column":7,"nodeType":"146","messageId":"147","endLine":55,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":188,"column":36,"nodeType":"159","messageId":"160","endLine":188,"endColumn":38},{"ruleId":"157","severity":1,"message":"158","line":218,"column":33,"nodeType":"159","messageId":"160","endLine":218,"endColumn":35},{"ruleId":"157","severity":1,"message":"158","line":227,"column":40,"nodeType":"159","messageId":"160","endLine":227,"endColumn":42},{"ruleId":"161","severity":1,"message":"162","line":257,"column":24,"nodeType":"163","messageId":"164","endLine":257,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":270,"column":33,"nodeType":"159","messageId":"160","endLine":270,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":285,"column":27,"nodeType":"163","messageId":"164","endLine":285,"endColumn":29},{"ruleId":"157","severity":1,"message":"158","line":308,"column":31,"nodeType":"159","messageId":"160","endLine":308,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":318,"column":21,"nodeType":"163","messageId":"164","endLine":318,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":371,"column":27,"nodeType":"163","messageId":"164","endLine":371,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":399,"column":27,"nodeType":"163","messageId":"164","endLine":399,"endColumn":29},{"ruleId":"144","severity":1,"message":"165","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"166","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":11},{"ruleId":"144","severity":1,"message":"167","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":20},{"ruleId":"144","severity":1,"message":"168","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":22},{"ruleId":"144","severity":1,"message":"169","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":19},{"ruleId":"144","severity":1,"message":"170","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":17},{"ruleId":"140","replacedBy":"171"},{"ruleId":"142","replacedBy":"172"},{"ruleId":"144","severity":1,"message":"173","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"174","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"175","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"167","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":20},{"ruleId":"144","severity":1,"message":"176","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"177","line":2,"column":16,"nodeType":"146","messageId":"147","endLine":2,"endColumn":35},{"ruleId":"144","severity":1,"message":"178","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":30},{"ruleId":"144","severity":1,"message":"179","line":4,"column":32,"nodeType":"146","messageId":"147","endLine":4,"endColumn":45},{"ruleId":"144","severity":1,"message":"180","line":4,"column":47,"nodeType":"146","messageId":"147","endLine":4,"endColumn":61},{"ruleId":"144","severity":1,"message":"181","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":12},{"ruleId":"144","severity":1,"message":"182","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":13},{"ruleId":"144","severity":1,"message":"183","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":17},{"ruleId":"144","severity":1,"message":"184","line":175,"column":19,"nodeType":"146","messageId":"147","endLine":175,"endColumn":26},{"ruleId":"144","severity":1,"message":"185","line":177,"column":21,"nodeType":"146","messageId":"147","endLine":177,"endColumn":25},{"ruleId":"144","severity":1,"message":"186","line":3,"column":39,"nodeType":"146","messageId":"147","endLine":3,"endColumn":49},{"ruleId":"144","severity":1,"message":"187","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":15},{"ruleId":"144","severity":1,"message":"188","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":16},{"ruleId":"144","severity":1,"message":"189","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":17},{"ruleId":"144","severity":1,"message":"190","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":15},{"ruleId":"144","severity":1,"message":"191","line":4,"column":9,"nodeType":"146","messageId":"147","endLine":4,"endColumn":22},{"ruleId":"144","severity":1,"message":"148","line":4,"column":24,"nodeType":"146","messageId":"147","endLine":4,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":4,"column":32,"nodeType":"146","messageId":"147","endLine":4,"endColumn":37},{"ruleId":"144","severity":1,"message":"175","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":16},{"ruleId":"144","severity":1,"message":"192","line":14,"column":8,"nodeType":"146","messageId":"147","endLine":14,"endColumn":13},{"ruleId":"144","severity":1,"message":"182","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":13},{"ruleId":"144","severity":1,"message":"186","line":3,"column":32,"nodeType":"146","messageId":"147","endLine":3,"endColumn":42},{"ruleId":"144","severity":1,"message":"193","line":12,"column":10,"nodeType":"146","messageId":"147","endLine":12,"endColumn":27},{"ruleId":"144","severity":1,"message":"194","line":22,"column":7,"nodeType":"146","messageId":"147","endLine":22,"endColumn":19},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'NewSuspectContainer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledAvatar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'styled' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.",["195"],["196"],"'React' is defined but never used.","'Button' is defined but never used.","'MuiAlert' is defined but never used.","'Link' is defined but never used.","'RouteComponentProps' is defined but never used.","'AmplifyAuthenticator' is defined but never used.","'AmplifySignUp' is defined but never used.","'AmplifySignOut' is defined but never used.","'Grid' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'history' is assigned a value but never used.","'from' is assigned a value but never used.","'withRouter' is defined but never used.","'Cameras' is defined but never used.","'Suspects' is defined but never used.","'Dashboard' is defined but never used.","'Account' is defined but never used.","'BrowserRouter' is defined but never used.","'Paper' is defined but never used.","'withAuthenticator' is defined but never used.","'signUpConfig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]