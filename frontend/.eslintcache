[{"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/index.js":"1","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/App.js":"2","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/reportWebVitals.js":"3","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Sidebar.js":"4","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Cameras.js":"5","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Suspects.js":"6","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Dashboard.js":"7","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Settings.js":"8","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Cognito.js":"9","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/getToken.js":"10","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Apibackend.js":"11","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/MenuBar.js":"12","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Account.js":"13"},{"size":578,"mtime":1608267706916,"results":"14","hashOfConfig":"15"},{"size":1741,"mtime":1609214892912,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607927895106,"results":"17","hashOfConfig":"15"},{"size":23160,"mtime":1609214448451,"results":"18","hashOfConfig":"15"},{"size":12670,"mtime":1608977312156,"results":"19","hashOfConfig":"15"},{"size":12279,"mtime":1609215621174,"results":"20","hashOfConfig":"15"},{"size":11456,"mtime":1609196984209,"results":"21","hashOfConfig":"15"},{"size":2099,"mtime":1608263316769,"results":"22","hashOfConfig":"15"},{"size":341,"mtime":1608175986007,"results":"23","hashOfConfig":"15"},{"size":820,"mtime":1609196361795,"results":"24","hashOfConfig":"15"},{"size":139,"mtime":1608406557080,"results":"25","hashOfConfig":"15"},{"size":3443,"mtime":1609214451910,"results":"26","hashOfConfig":"15"},{"size":3560,"mtime":1609201245574,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"178cfx6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"30"},"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/index.js",[],["61","62"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/App.js",["63","64","65","66","67","68","69"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/reportWebVitals.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Sidebar.js",["70","71"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Cameras.js",["72","73","74"],"import React, { Component } from \"react\";\nimport 'fontsource-roboto';\nimport Button from '@material-ui/core/Button';\n\nimport Card from '@material-ui/core/Card';\nimport styled from \"styled-components\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport getToken from '../Config/getToken'\nimport apiEndpoint from '../Config/Apibackend'\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Modal from '@material-ui/core/Modal';\n\nconst NewCamerasContainer = styled.div`\n    display: flex;\n    padding-top: 100px;\n    \n`;\n    \nclass Cameras extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n            cameraId: \"\", username:\"admin\", password:\"12345\", cam_Location:\"\", ip:\"\", server_Status:\"\", \n            url_path: \"Streaming/Channels/101\", server_info: \"\", port:\"554\", req_Status:\"\", userId:\"\", report_to:\"\",\n            token: \"\", camerasList: null, setOpen: false, reload: null,\n        };\n             \n        \n    }\n\n    async componentDidMount(){\n        await this.handleAuth();\n        this.getCameras();\n     \n    }\n\n    async handleAuth(){\n        let token = new getToken();\n        await token.token()\n        this.setState({\n            token: token.state.jwtToken\n        })\n\n    }\n    async getCameras(){\n        // console.log(this.state.token)\n        \n        await axios.get(apiEndpoint+'/getcameras', \n            {headers: \n                { 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.token}`}\n             }).then(res => {this.setState({camerasList: res.data.item});\n               })\n          .catch(e => console.log(e))\n        \n    }\n\n    handleEdit(camItem){\n        \n       \n       this.setState({\n           setOpen: true,\n           cameraId: camItem.cameraId,\n           cam_Location: camItem.cam_Location,\n           ip: camItem.ip,\n           port: camItem.port,\n           url_path: camItem.url_path,\n           username: camItem.username,\n           password: camItem.password,\n           report_to: camItem.report_to\n        })\n\n    }\n    \n    handleClose = () => {\n        this.setState({\n            setOpen:false\n        })\n    }\n    \n    handleFormInput = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({[name] : value })\n    }\n\n    handleSubmit = () => {\n        const newCam ={\n            cam_Location: this.state.cam_Location,\n            ip: this.state.ip,\n            port: this.state.port,\n            url_path: this.state.url_path,\n            username: this.state.username,\n            password: this.state.password\n        }\n        this.createNewCam(newCam);\n\n    }\n\n    handleEditSubmit =() =>{\n        const editedCam ={\n            cam_Location: this.state.cam_Location,\n            ip: this.state.ip,\n            port: this.state.port,\n            url_path: this.state.url_path,\n            username: this.state.username,\n            password: this.state.password,\n            report_to: this.state.report_to\n        }\n        //console.log(editedCam)\n        this.updateCamera(this.state.cameraId, editedCam);\n    }\n\n    async handleDel(cameraId){\n        await axios.delete(apiEndpoint+'/delcamera/'+cameraId,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The Camera was not deleted\", e); console.log(e)});\n        window.location.reload();\n     }\n\n        \n    async createNewCam(newCam){\n        await axios.post(apiEndpoint+'/camset', newCam,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The request was not completed; Make sure to include all the required data\", e); console.log(e)});\n        window.location.reload();\n    }\n\n    async updateCamera(cameraId, editedCam){\n        await axios.patch(apiEndpoint+'/camera/'+cameraId, editedCam,\n        {\n            headers:\n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n        }).then(res =>{this.setState({reload: true})\n        }).catch(e => {alert(\"The request was not completed; Make sure to include all the required data\", e); console.log(e)});\n        window.location.reload();\n        \n        \n    }\n\n    render() {\n    console.log(this.state.reload);\n    let cameraLst = []\n    if (this.state.camerasList)\n        cameraLst= this.state.camerasList;\n        console.log(cameraLst)\n        const lstOfCameras = cameraLst.map((item) =>\n                    \n                    <tr >    \n                        <td>{item.cam_Location}</td>\n                        <td>{item.ip}</td>\n                        <td>{item.port}</td>\n                        <td>{item.url_path}</td>\n                        <td>{item.username}</td>\n                        <td>{item.password}</td>\n                        <td>{item.server_info}</td>\n                        <td>{item.report_to}</td>\n                        <td> <Button onClick={() =>{this.handleEdit(item)}}>Edit</Button></td>\n                        <td> <IconButton onClick={() =>{this.handleDel(item.cameraId)} } aria-label=\"delete\"><DeleteIcon/></IconButton></td>\n                        \n                    \n                    </tr>\n                    )\n    \n    return (\n            \n           <Container >\n               <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        Registered Cameras\n                </Typography>\n               <TableContainer component={Card}>\n                   <Table selectable={false} >\n                        <TableHead >\n                            <TableRow >\n                                <TableCell align=\"center\"> Location</TableCell>\n                                <TableCell align=\"center\"> Camera IP</TableCell>\n                                <TableCell align=\"center\"> Port</TableCell>\n                                <TableCell align=\"center\"> URL Path</TableCell>\n                                <TableCell align=\"center\"> Username</TableCell>\n                                <TableCell align=\"center\"> Password</TableCell>\n                                <TableCell align=\"center\"> Status</TableCell>\n                                <TableCell align=\"center\"> Report To</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody >\n                           {lstOfCameras}\n                        </TableBody>\n                   </Table>\n               </TableContainer>\n\n               <Modal open={this.state.setOpen} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                <Container maxWidth=\"md\" disableGutters=\"true\">\n                  <Card>\n                  <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Edit Camera\n                        </Typography>\n                       \n                        <TextField required id=\"standard-required-1\" label=\"Location\" defaultValue={this.state.cam_Location} onChange={this.handleFormInput} name=\"cam_Location\"/>\n                        <TextField required id=\"standard-disabled-2\" label=\"IP\"  defaultValue={this.state.ip} onChange={this.handleFormInput} name=\"ip\"/>\n                        <TextField required id=\"standard-disabled-3\" label=\"PORT\" defaultValue={this.state.port} onChange={this.handleFormInput} name=\"port\"/>\n                        <TextField required id=\"standard-disabled-4\" label=\"URL/Path\" defaultValue={this.state.url_path} onChange={this.handleFormInput} name=\"url_path\"/>\n                        <TextField required id=\"standard-disabled-5\" label=\"username\" defaultValue={this.state.username}  onChange={this.handleFormInput} name=\"username\"/>\n                \n                \n                        <TextField required\n                        id=\"standard-password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        defaultValue={this.state.password} \n                        autoComplete=\"current-password\"\n                        onChange={this.handleFormInput} name=\"password\"\n                        />\n                        <TextField required id=\"standard-disabled\" label=\"Report to\" defaultValue={this.state.report_to} onChange={this.handleFormInput} name=\"report_to\"/>\n\n                  </CardContent>\n                        \n                  \n                  <CardActions>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleEditSubmit} >Submit</Button>\n                  <Button size=\"small\" color=\"primary\" onClick={this.handleClose}>Cancel</Button>  \n                  </CardActions>  \n                  </Card>            \n                </Container>\n                </Modal>\n              \n               \n                <NewCamerasContainer>\n                <Card>\n                <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                        New camera \n                </Typography>\n                \n                <CardContent>\n                \n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" align=\"justify\">\n                    <ul> \n                        <li>Add a new camera using RTSP protocol </li>\n                        <li>The camera must be connected to the internet.</li>\n                        <li>Set port forwarding on your Internet Router. Check the following <a href=\"https://www.purevpn.com/blog/how-to-forward-ports-on-your-router/\">link</a> to learn how to do it.</li>\n                        <li>Find here the <a href=\"https://www.getscw.com/decoding/rtsp#:~:text=1.210.-,You%20can%20also%20encode%20credentials%20into%20the%20URL%20by%20entering,and%2012345%20is%20the%20password.\">RTSP stream URL/Path </a> for your camera brand. </li>\n                    </ul>\n                    \n                </Typography>\n             \n                </CardContent>\n                <TextField required id=\"standard-required\" label=\"Location\"  onChange={this.handleFormInput} name=\"cam_Location\"/>\n                <TextField required id=\"standard-disabled\" label=\"IP\"  onChange={this.handleFormInput} name=\"ip\"/>\n                <TextField required id=\"standard-disabled\" label=\"PORT\" defaultValue=\"554\" onChange={this.handleFormInput} name=\"port\"/>\n                <TextField required id=\"standard-disabled\" label=\"URL/Path\" defaultValue=\"Streaming/Channels/101\" onChange={this.handleFormInput} name=\"url_path\"/>\n                <TextField required id=\"standard-disabled\" label=\"username\" defaultValue=\"admin\" onChange={this.handleFormInput} name=\"username\"/>\n                \n                \n                <TextField required\n                id=\"standard-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                defaultValue=\"12345\"\n                autoComplete=\"current-password\"\n                onChange={this.handleFormInput} name=\"password\"\n                />\n            \n              \n                \n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.handleSubmit}>\n                    add\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                    Learn More\n                    </Button>\n                </CardActions>\n                \n                </Card>\n                </NewCamerasContainer>\n            \n            \n            </Container>\n            \n            )\n    }\n}\n\n\nexport default Cameras;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Suspects.js",["75","76","77","78"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Dashboard.js",["79","80","81","82","83","84","85","86","87","88","89"],"import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport getToken from '../Config/getToken';\nimport apiEndpoint from '../Config/Apibackend';\nimport { Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { DataGrid } from '@material-ui/data-grid';\n\n\nconst ContainerSuspects = styled.table`\n    display: flex;\n    height: 40vh;\n    \n    \n`;\n\nconst ContainerSummary = styled.div`\n    padding-left: 100px;\n    padding-top: 20px;\n    text-align: center;\n    \n`;\n\nconst SummaryPaper = styled.div`\n    height: 10vh;\n    weidth: 20vh;\n`;\n\nconst CamerasStyled = styled.table`\n    display: flex;\n    height: 40vh;\n    \n`;\n\nconst StyledAvatar = styled(Avatar)`\n    color: #432313;\n    backgroundColor: #5469d4;\n    width: 120px;\n    height: 120px;\n\n\n`;\n\nclass Dashboard extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n           list_cameras: null, list_suspects: null, token:\"\" , checkbox: \"\", selectedIds: [], reload :false, user:\"\"\n          };\n    }\n  async componentDidMount(){\n      await this.handleAuth();\n      await this.getCameras();\n      await this.getSuspects();\n      \n  }\n  \n  async handleAuth(){\n    let token = new getToken();\n    await token.token()\n    this.setState({\n        token: token.state.jwtToken,\n        user: token.state.user\n    })\n\n}\n\n  async getCameras(){\n\n    await axios.get(apiEndpoint+'/getcameras', \n        {headers: \n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n         }).then(res => {this.setState({list_cameras: res.data.item});\n           })\n      .catch(e => console.log(e))\n  }\n\n  async getSuspects(){   \n    await axios.get(apiEndpoint+'/getsuspects', \n        {headers: \n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n         }).then(res => {this.setState({list_suspects: res.data.item});\n           })\n      .catch(e => console.log(e))\n    \n  }\n\n  getLackofEncodings = () =>{\n    let count = 0\n    \n    if (this.state.list_suspects!=null){\n        \n        const arraySuspects = this.state.list_suspects\n        \n    \n        let no_encoded =  arraySuspects.filter(function(noEncoded){\n          return noEncoded.encoding_status == \"Image not Enconded\";\n        })\n        console.log(Object.keys(no_encoded).length)\n        count = Object.keys(no_encoded).length\n      }\n    return (\n      <p>{count}</p>\n    )\n   \n  }\n\n  getLackofImages =() =>{\n    let count = 0\n    \n    if (this.state.list_suspects!=null){\n        \n        const arraySuspects = this.state.list_suspects\n        \n    \n        let no_image =  arraySuspects.filter(function(noEncoded){\n          return noEncoded.encoding_status == \"No Image\";\n        })\n        console.log(Object.keys(no_image).length)\n        count = Object.keys(no_image).length\n      }\n    return (\n      <Avatar > {count} </Avatar>\n    )\n   \n  }\n\n  getCamerasOn = () =>{\n    let count = 0\n    if (this.state.list_cameras!=null){\n      const arrayCams = this.state.list_cameras\n      let onCameras = arrayCams.filter(function(camOn){\n        return camOn.server_Status == \"1\";\n      })\n      count = Object.keys(onCameras).length\n      return(\n        <Avatar> {count}</Avatar>\n      )\n    }\n\n\n  }\n\n  getCamerasError = () =>{\n    let count = 0\n    if (this.state.list_cameras!=null){\n      const arrayCams = this.state.list_cameras\n      let onCameras = arrayCams.filter(function(camOn){\n        return camOn.server_info == \"No Camera stream available, check RTSP settings \";\n      })\n      count = Object.keys(onCameras).length\n      return(\n        <Avatar> {count}</Avatar>\n      )\n    }\n\n  }\n\n  handleEncodings =() =>{\n      this.genEncodings();\n  }\n\n  async genEncodings(){\n    console.log(this.state.token)\n    await axios.get(apiEndpoint+'/encodings', \n        {headers: \n            { 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.state.token}`}\n         }).then(res => {console.log(res.data); alert(\"Encodings process has started\")})\n         .catch(e => {console.log(e); alert(e)})\n  }\n\n  \n  handleRowSelect = (row) =>{\n    console.log(this.state.selectedIds);\n    let selection = row.rowIds;\n    \n    let tempArrayofCamIds = []\n    selection.map((id) =>{\n      \n      tempArrayofCamIds.push(this.state.list_cameras[id].cameraId);\n      })\n    \n    console.log(tempArrayofCamIds);\n    this.setState({\n      selectedIds : tempArrayofCamIds\n    })\n    console.log(this.state.selectedIds);\n  }\n\n  handleStartStreaming = () =>{\n    if (this.state.selectedIds.length == 0){\n      alert(\"Please select a Camera\")\n    }\n    else{\n      console.log(this.state.selectedIds);\n      let cams = this.state.selectedIds;\n      this.startStreaming(cams);\n    }\n   \n\n  }\n\n async startStreaming(cams){\n   //console.log(this.state.token)\n     await cams.map(async (id) => {\n       axios.post(apiEndpoint+\"/start/\"+id,\n      {\n          headers:\n          { 'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.state.token}`}\n      }).then(res =>{this.setState({reload: true});alert(\"Streaming has been initialized\")})\n      .catch(e => {alert(e); console.log(e)});\n      })\n    //window.location.reload();\n      \n}\nhandleStopStreaming = () =>{\n  if (this.state.selectedIds.length == 0){\n    alert(\"Please select a Camera\")\n  }\n  else{\n    console.log(this.state.selectedIds);\n    let cams = this.state.selectedIds;\n    this.stopStreaming(cams);\n  }\n \n\n}\n\n  async stopStreaming(cams){\n    //console.log(this.state.token)\n     await cams.map(async (id) => {\n       axios.post(apiEndpoint+\"/stop/\"+id,\n      {\n          headers:\n          { 'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.state.token}`}\n      }).then(res =>{this.setState({reload: true});alert(\"Streaming has stopped\")})\n      .catch(e => {alert(e); console.log(e)});\n      })\n    //window.location.reload();\n  }\n\n  handleReload =() => {\n    window.location.reload();\n    //this.getCameras();\n    //this.getSuspects();\n\n  }\n \n \n\n    render() {\n      let cameraList = [];\n      let suspectList = [];\n      \n      let summaryColumns = [{headerName:\"Cameras with active streaming\", field: \"active\", width:150},{headerName:\"Failed streaming cameras\", field: \"failed\", width:150},\n                            {headerName:\"Profiles with No Image\", field: \"no_image\", width:150},{headerName:\"Profiles with no encoded Image\", field: \"no_encoded\", width:150}]\n              \n\n      if (this.state.list_suspects){\n        let temp = this.state.list_suspects;\n          let id = 0;\n          temp.map((item) =>\n              {item.id = id; \n              id = id+1})\n          \n          suspectList = temp;\n         \n      \n        }\n\n      \n        \n      let suspColumns =[\n            {\n            headerName: \"Name\",\n            field: \"suspectName\",\n            width: 200\n            },\n            {\n            headerName: \"Encoding Status\",\n            field: \"encoding_status\",\n            width: 200\n            }]\n          \n      if (this.state.list_cameras){\n        let temp = this.state.list_cameras;\n          let id = 0;\n          temp.map((item) =>\n              {item.id = id; \n              id = id+1})\n          \n          cameraList = temp;\n          \n        }\n        let failedCameras = this.getCamerasError();\n        let onCameras = this.getCamerasOn();\n        let no_encoded = this.getLackofEncodings();\n        let no_images = this.getLackofImages();\n        let summary = [{\"id\":1, \"active\":onCameras, \"failed\":failedCameras, \"no_images\":no_images,\"no_encoded\":no_encoded}]\n          \n      \n      let camColumns = [\n        {field: \"cam_Location\", headerName : \"Location\" , width:180},\n        {field: \"server_info\", headerName : \"Server Information\" , width:200},\n        {field: \"server_Status\", headerName : \"Status\" , width:120}\n      ]\n      \n        \n          \n          \n     \n      return (\n       <Grid container spacing={3}>\n         <Grid item xs={12}>\n         <Paper >\n                <Typography variant=\"h5\" component=\"h2\"  color=\"textSecondary\" gutterBottom>\n                  Summary\n                </Typography>\n                <Grid container spacing={3}>\n                <Grid item xs={12} sm={3}>\n                  \n                  <Paper>\n                  <SummaryPaper>\n                  <Typography variant=\"h8\" component=\"h3\"  gutterBottom>Cameras active streaming </Typography>\n                  <ContainerSummary ><StyledAvatar $withBorder> {onCameras}</StyledAvatar>  </ContainerSummary>\n                  </SummaryPaper>\n                  </Paper>\n                  \n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <Paper>\n                  <SummaryPaper>\n                  <Typography variant=\"h8\" component=\"h3\"  gutterBottom>Failed streaming cameras</Typography>\n                  <ContainerSummary>{failedCameras} </ContainerSummary>\n                  </SummaryPaper>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <Paper>\n                  <SummaryPaper>\n                  <Typography variant=\"h8\" component=\"h3\"  gutterBottom>Profiles with No Image</Typography>\n                  <ContainerSummary>{no_images} </ContainerSummary>\n                  </SummaryPaper>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <Paper>\n                  <SummaryPaper>\n                  <Typography variant=\"h8\" component=\"h3\"  gutterBottom>Profiles no encoded Image</Typography>\n                  <ContainerSummary><StyledAvatar> {no_encoded}</StyledAvatar>  </ContainerSummary>\n                  </SummaryPaper>\n                  </Paper>\n                </Grid>\n                </Grid>\n              </Paper> \n         </Grid>\n         <Grid item xs={12} sm={6}>\n              <Paper>\n                <CamerasStyled>\n                <DataGrid rows={cameraList} columns={camColumns} checkboxSelection onSelectionChange={this.handleRowSelect}/>\n                </CamerasStyled>\n              </Paper>\n          </Grid> \n          <Grid item xs={12} sm={6}>\n              <Paper>\n                <ContainerSuspects>\n                <DataGrid rows={suspectList} columns={suspColumns} />\n                </ContainerSuspects>\n              </Paper>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" color=\"primary\" align=\"justify\" onClick={this.handleStartStreaming} >Start Streaming</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" color=\"primary\" align=\"justify\" onClick={this.handleStopStreaming} >Stop Streaming</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" color=\"primary\" align=\"justify\" onClick={this.handleEncodings} >Generate Encodings</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" color=\"primary\" align=\"justify\" onClick={this.handleReload} >Reload Data</Button>\n          </Grid>\n          \n        </Grid>\n        \n\n        \n        \n        \n        \n\n      )\n    }\n}\n\n\nexport default Dashboard;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Settings.js",["90","91","92","93","94","95"],"import Button from '@material-ui/core/Button';\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from '@material-ui/core/Modal';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\n\n\nclass Settings extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            setOpen: false,\n            };\n    }\n\n    \n\n    handleOpen = () => {\n        this.setState({\n            setOpen:true\n        })\n    }\n    \n    handleClose = () => {\n        this.setState({\n            setOpen:false\n        })\n    }\n    \n    \n    render() {\n    \n    return (\n        \n      \n      <Container maxWidth=\"sm\">\n      \n        <Button variant=\"contained\" onClick={this.handleOpen}>Open Modal</Button>\n        \n        <Modal open={this.state.setOpen} onClose={this.handleClose} style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n            <Container maxWidth=\"xs\" disableGutters=\"true\">\n              <Card>\n              <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Lizard\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        <p>Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                        across all continents except Antarctica  \n                        </p>\n                    </Typography>\n                </CardContent>\n             </Card>\n            </Container>\n        </Modal>\n        \n       \n        </Container>\n       \n        \n    )\n    }\n}\n\n\nexport default Settings;",["96","97"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Cognito.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/getToken.js",["98"],"import { Auth } from 'aws-amplify';\nimport React, {Component} from 'react';\n\nclass getToken extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            jwtToken :\"\",\n            user :\"\",\n            attributes: null\n                    };\n         this.token();\n    }\n    async token(){\n        \n        await Auth.currentSession()\n                .then(data => {this.state.jwtToken = data.idToken.jwtToken })\n                .catch(e => console.log(e))\n        await Auth.currentAuthenticatedUser()\n                .then(user => {this.state.user= user.username; this.state.attributes = user.attributes\n                                })\n                .catch(e => console.log(e))\n                  //console.log(this.state.jwtToken)\n        \n        \n    }\n\n\n}\n export default getToken;","/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Config/Apibackend.js",[],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/MenuBar.js",["99","100","101","102","103","104","105","106"],"/home/juadel/Documents/Github/Suspect_Detection_CLoud/frontend/src/Components/Account.js",["107","108","109","110","111","112","113","114"],"import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Amplify from 'aws-amplify';\nimport getToken from '../Config/getToken';\nimport Container from '@material-ui/core/Container';\nimport { Button, Typography } from \"@material-ui/core\";\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { Auth } from 'aws-amplify';\nimport Grid from '@material-ui/core/Grid';\nimport {Route, Switch, withRouter} from 'react-router-dom';\n\nconst ButtonLocation = styled.div`\n    \n    padding-top: 20px;\n    text-align: center;\n    \n`;\n\nclass Account extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n            token:\"\" , user:\"\", attributes: [], oldPassword:\"\", newPassword:\"\", rePassword:\"\"\n          };\n\n    }\n    async componentDidMount(){\n        await this.handleAuth();\n        \n        \n    }\n    \n    async handleAuth(){\n      let token = new getToken();\n      await token.token()\n      this.setState({\n          token: token.state.jwtToken,\n          user: token.state.user,\n          attributes: token.state.attributes\n      })\n    }\n\n    handleFormInput = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({[name] : value })\n    }\n    \n    handleSubmitChangePass = () => {\n        if (this.state.oldPassword!=\"\"){\n            if(this.state.newPassword==this.state.rePassword){\n                this.changePassword() \n            }\n            else{\n                alert(\"New Password does not match\")\n            }\n        }\n        else {\n            alert(\"Old Password can not be empty\")\n        }\n\n    }\n\n    async changePassword(){\n        await Auth.currentAuthenticatedUser().\n        then(user =>{\n            return Auth.changePassword(user, this.state.oldPassword, this.state.newPassword );\n        })\n        .then(data => alert(data))\n        .catch(err => alert(err))\n        window.location.reload();\n        \n    }\n\n    handleRoute = route =>() =>{\n        this.props.history.push({pathname: route})\n        \n    }\n\n\n\n    render(){\n       \n        return(\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={3}>\n                <Paper>\n                    <Typography gutterBottom variant=\"h5\" component=\"h5\">Change Password</Typography>\n                    \n                    <TextField required id=\"standard-required-1\" label=\"Old Password\" type=\"password\"  onChange={this.handleFormInput} name=\"oldPassword\"/>\n                    \n                    <TextField required id=\"standard-required-1\" label=\"New Password\" type=\"password\"  onChange={this.handleFormInput} name=\"newPassword\"/>\n                    <TextField required id=\"standard-required-1\" label=\"Repeat new Password\" type=\"password\"  onChange={this.handleFormInput} name=\"rePassword\"/>\n                    \n                </Paper>\n                <ButtonLocation>\n                    <Button variant=\"contained\" color=\"primary\" align=\"justify\" onClick={this.handleSubmitChangePass}>change</Button>\n                </ButtonLocation>\n                </Grid>\n                {/* <Paper>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Change email</Typography>\n                </Paper>\n                <Paper>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Change Phone</Typography>\n                </Paper> */}\n            </Grid>\n        )\n    }\n\n\n\n}\n\nexport default Account",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":49,"nodeType":"121","messageId":"122","endLine":3,"endColumn":59},{"ruleId":"119","severity":1,"message":"123","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"119","severity":1,"message":"124","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":15},{"ruleId":"119","severity":1,"message":"126","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":14},{"ruleId":"119","severity":1,"message":"127","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":18},{"ruleId":"119","severity":1,"message":"128","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":3,"column":9,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"130","line":3,"column":16,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"131","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"132","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":11},{"ruleId":"119","severity":1,"message":"131","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"132","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":11},{"ruleId":"119","severity":1,"message":"134","line":30,"column":7,"nodeType":"121","messageId":"122","endLine":30,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":104,"column":44,"nodeType":"137","messageId":"138","endLine":104,"endColumn":46},{"ruleId":"135","severity":1,"message":"136","line":124,"column":44,"nodeType":"137","messageId":"138","endLine":124,"endColumn":46},{"ruleId":"135","severity":1,"message":"136","line":140,"column":36,"nodeType":"137","messageId":"138","endLine":140,"endColumn":38},{"ruleId":"135","severity":1,"message":"136","line":156,"column":34,"nodeType":"137","messageId":"138","endLine":156,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":186,"column":24,"nodeType":"141","messageId":"142","endLine":186,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":199,"column":39,"nodeType":"137","messageId":"138","endLine":199,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":226,"column":37,"nodeType":"137","messageId":"138","endLine":226,"endColumn":39},{"ruleId":"119","severity":1,"message":"143","line":265,"column":11,"nodeType":"121","messageId":"122","endLine":265,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":272,"column":27,"nodeType":"141","messageId":"142","endLine":272,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":298,"column":27,"nodeType":"141","messageId":"142","endLine":298,"endColumn":29},{"ruleId":"119","severity":1,"message":"144","line":309,"column":13,"nodeType":"121","messageId":"122","endLine":309,"endColumn":20},{"ruleId":"119","severity":1,"message":"145","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"133","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":11},{"ruleId":"119","severity":1,"message":"146","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":20},{"ruleId":"119","severity":1,"message":"131","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":22},{"ruleId":"119","severity":1,"message":"147","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":19},{"ruleId":"119","severity":1,"message":"132","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":17},{"ruleId":"115","replacedBy":"148"},{"ruleId":"117","replacedBy":"149"},{"ruleId":"119","severity":1,"message":"150","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"151","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"152","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":26},{"ruleId":"119","severity":1,"message":"153","line":7,"column":28,"nodeType":"121","messageId":"122","endLine":7,"endColumn":42},{"ruleId":"119","severity":1,"message":"127","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":18},{"ruleId":"119","severity":1,"message":"128","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":16,"column":9,"nodeType":"121","messageId":"122","endLine":16,"endColumn":14},{"ruleId":"119","severity":1,"message":"130","line":16,"column":16,"nodeType":"121","messageId":"122","endLine":16,"endColumn":22},{"ruleId":"119","severity":1,"message":"151","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":15},{"ruleId":"119","severity":1,"message":"154","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":17},{"ruleId":"119","severity":1,"message":"129","line":11,"column":9,"nodeType":"121","messageId":"122","endLine":11,"endColumn":14},{"ruleId":"119","severity":1,"message":"130","line":11,"column":16,"nodeType":"121","messageId":"122","endLine":11,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":11,"column":24,"nodeType":"121","messageId":"122","endLine":11,"endColumn":34},{"ruleId":"135","severity":1,"message":"155","line":53,"column":35,"nodeType":"137","messageId":"138","endLine":53,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":54,"column":38,"nodeType":"137","messageId":"138","endLine":54,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":68,"column":46,"nodeType":"158","messageId":"159","endLine":68,"endColumn":47,"fix":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'CardActionArea' is defined but never used.","'CardMedia' is defined but never used.","'Box' is defined but never used.","'NewSuspectContainer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'summaryColumns' is assigned a value but never used.","'summary' is assigned a value but never used.","'styled' is defined but never used.","'makeStyles' is defined but never used.","'CardActions' is defined but never used.",["161"],["162"],"'React' is defined but never used.","'Amplify' is defined but never used.","'AmplifyGreetings' is defined but never used.","'AmplifySignOut' is defined but never used.","'Container' is defined but never used.","Expected '!==' and instead saw '!='.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"163","text":"164"},"no-global-assign","no-unsafe-negation",[1784,1794],"\n        ."]